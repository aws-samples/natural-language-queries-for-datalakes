[
    {"QUESTION_NO": 1,
        "GROUP_NO": 1,
        "SUBQUESTION_NO": 0,
        "QUESTION": "How many products are in the 'Beverages' category?",
        "DISAMBIGUATED_QUESTION": "Count the number of products in the Products table that belong to the category named 'Beverages'.",
        "ANSWER_SQL": "SELECT COUNT(*) FROM Products JOIN Categories ON Products.CategoryID = Categories.CategoryID WHERE Categories.CategoryName = 'Beverages'"}, 
    {"QUESTION_NO": 2,
        "GROUP_NO": 2,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who is the employee with the most sales in 2016?",
        "DISAMBIGUATED_QUESTION": "Find the employee who has the highest total sales amount for orders placed in 2016.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE strftime('%Y', o.OrderDate) = '2016' GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1"}, 
    {"QUESTION_NO": 3,
        "GROUP_NO": 3,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the most expensive product in the 'Seafood' category?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest unit price in the category named 'Seafood'.",
        "ANSWER_SQL": "SELECT p.ProductName, p.UnitPrice FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Seafood' ORDER BY p.UnitPrice DESC LIMIT 1"}, 
    {"QUESTION_NO": 4,
        "GROUP_NO": 4,
        "SUBQUESTION_NO": 0,
        "QUESTION": "How many orders were shipped to Germany in 1996?",
        "DISAMBIGUATED_QUESTION": "Count the number of orders in the Orders table that were shipped to Germany in the year 1996.",
        "ANSWER_SQL": "SELECT COUNT(*) FROM Orders WHERE ShipCountry = 'Germany' AND strftime('%Y', OrderDate) = '1996'"}, 
    {"QUESTION_NO": 5,
        "GROUP_NO": 5,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which supplier provides the most products?",
        "DISAMBIGUATED_QUESTION": "Find the supplier that has the highest count of products in the Products table.",
        "ANSWER_SQL": "SELECT s.CompanyName, COUNT(*) AS ProductCount FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY ProductCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 6,
        "GROUP_NO": 6,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the average order value for customers in France?",
        "DISAMBIGUATED_QUESTION": "Calculate the average total value of orders for customers located in France.",
        "ANSWER_SQL": "SELECT AVG(OrderTotal) FROM (SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderTotal FROM Orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'France' GROUP BY o.OrderID)"}, 
    {"QUESTION_NO": 7,
        "GROUP_NO": 7,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which category has the highest average product price?",
        "DISAMBIGUATED_QUESTION": "Find the category with the highest average unit price of its products.",
        "ANSWER_SQL": "SELECT c.CategoryName, AVG(p.UnitPrice) AS AvgPrice FROM Categories c JOIN Products p ON c.CategoryID = p.CategoryID GROUP BY c.CategoryID ORDER BY AvgPrice DESC LIMIT 1"}, 
    {"QUESTION_NO": 8,
        "GROUP_NO": 8,
        "SUBQUESTION_NO": 0,
        "QUESTION": "How many employees are older than their managers?",
        "DISAMBIGUATED_QUESTION": "Count the number of employees whose birth date is earlier than their manager's birth date.",
        "ANSWER_SQL": "SELECT COUNT(*) FROM Employees e JOIN Employees m ON e.ReportsTo = m.EmployeeID WHERE e.BirthDate < m.BirthDate"}, 
    {"QUESTION_NO": 9,
        "GROUP_NO": 9,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the most common ship country for orders?",
        "DISAMBIGUATED_QUESTION": "Find the country to which the most orders have been shipped.",
        "ANSWER_SQL": "SELECT ShipCountry, COUNT(*) AS OrderCount FROM Orders GROUP BY ShipCountry ORDER BY OrderCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 10,
        "GROUP_NO": 10,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which customers have never placed an order?",
        "DISAMBIGUATED_QUESTION": "List the customers who do not have any corresponding entries in the Orders table.",
        "ANSWER_SQL": "SELECT CustomerID, CompanyName FROM Customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM Orders)"}, 
    {"QUESTION_NO": 11,
        "GROUP_NO": 11,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the total revenue from 'Dairy Products' in 1997?",
        "DISAMBIGUATED_QUESTION": "Calculate the sum of all order details' extended prices for products in the 'Dairy Products' category for orders placed in 1997.",
        "ANSWER_SQL": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN Products p ON od.ProductID = p.ProductID JOIN Categories c ON p.CategoryID = c.CategoryID JOIN Orders o ON od.OrderID = o.OrderID WHERE c.CategoryName = 'Dairy Products' AND strftime('%Y', o.OrderDate) = '1997'"}, 
    {"QUESTION_NO": 12,
        "GROUP_NO": 12,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who are the top 5 employees by total sales amount?",
        "DISAMBIGUATED_QUESTION": "List the top 5 employees based on their total sales amount across all orders.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 5"}, 
    {"QUESTION_NO": 13,
        "GROUP_NO": 13,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the average number of days between order date and ship date?",
        "DISAMBIGUATED_QUESTION": "Calculate the average number of days between the OrderDate and ShippedDate for all orders.",
        "ANSWER_SQL": "SELECT AVG(JULIANDAY(ShippedDate) - JULIANDAY(OrderDate)) AS AvgDays FROM Orders WHERE ShippedDate IS NOT NULL"}, 
    {"QUESTION_NO": 14,
        "GROUP_NO": 14,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which products have never been ordered?",
        "DISAMBIGUATED_QUESTION": "List the products that do not appear in any order details.",
        "ANSWER_SQL": "SELECT ProductName FROM Products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details])"}, 
    {"QUESTION_NO": 15,
        "GROUP_NO": 15,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the most popular product in terms of units sold?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest total quantity sold across all orders.",
        "ANSWER_SQL": "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY TotalQuantity DESC LIMIT 1"}, 
    {"QUESTION_NO": 16,
        "GROUP_NO": 16,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which customers have ordered all products in a specific category?",
        "DISAMBIGUATED_QUESTION": "List customers who have ordered all products belonging to the 'Beverages' category.",
        "ANSWER_SQL": "SELECT c.CustomerID, c.CompanyName FROM Customers c WHERE NOT EXISTS (SELECT p.ProductID FROM Products p JOIN Categories cat ON p.CategoryID = cat.CategoryID WHERE cat.CategoryName = 'Beverages' AND p.ProductID NOT IN (SELECT od.ProductID FROM Orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.CustomerID = c.CustomerID))"}, 
    {"QUESTION_NO": 17,
        "GROUP_NO": 17,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the average discount percentage for orders over $1000?",
        "DISAMBIGUATED_QUESTION": "Calculate the average discount percentage for order details where the total value (unit price * quantity) exceeds $1000.",
        "ANSWER_SQL": "SELECT AVG(Discount) * 100 AS AvgDiscountPercentage FROM [Order Details] WHERE UnitPrice * Quantity > 1000"}, 
    {"QUESTION_NO": 18,
        "GROUP_NO": 18,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which suppliers are from the same country as their products' category's top-selling product?",
        "DISAMBIGUATED_QUESTION": "List suppliers who are from the same country as the top-selling product (by total quantity sold) in the category of products they supply.",
        "ANSWER_SQL": "WITH TopSellingProducts AS (SELECT p.CategoryID, p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.CategoryID, p.ProductID), CategoryTopSellers AS (SELECT t.CategoryID, t.ProductID, p.SupplierID, s.Country FROM TopSellingProducts t JOIN Products p ON t.ProductID = p.ProductID JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE (t.CategoryID, t.TotalQuantity) IN (SELECT CategoryID, MAX(TotalQuantity) FROM TopSellingProducts GROUP BY CategoryID)) SELECT DISTINCT s.SupplierID, s.CompanyName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN CategoryTopSellers cts ON p.CategoryID = cts.CategoryID WHERE s.Country = cts.Country"}, 
    {"QUESTION_NO": 19,
        "GROUP_NO": 19,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the total revenue for each quarter of 2016?",
        "DISAMBIGUATED_QUESTION": "Calculate the total revenue (sum of order details' extended prices) for each quarter of the year 2016.",
        "ANSWER_SQL": "SELECT (CASE WHEN strftime('%m', o.OrderDate) IN ('01', '02', '03') THEN 'Q1' WHEN strftime('%m', o.OrderDate) IN ('04', '05', '06') THEN 'Q2' WHEN strftime('%m', o.OrderDate) IN ('07', '08', '09') THEN 'Q3' ELSE 'Q4' END) AS Quarter, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM Orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE strftime('%Y', o.OrderDate) = '2016' GROUP BY Quarter ORDER BY Quarter"}, 
    {"QUESTION_NO": 20,
        "GROUP_NO": 20,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which employees have territories in multiple regions?",
        "DISAMBIGUATED_QUESTION": "List employees who are assigned territories that belong to more than one region.",
        "ANSWER_SQL": "SELECT e.EmployeeID, e.FirstName || ' ' || e.LastName AS EmployeeName, COUNT(t.RegionID) AS RegionCount FROM Employees e JOIN EmployeeTerritories et ON e.EmployeeID = et.EmployeeID JOIN Territories t ON et.TerritoryID = t.TerritoryID GROUP BY e.EmployeeID HAVING RegionCount > 1"}, 
    {"QUESTION_NO": 21,
        "GROUP_NO": 21,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the most expensive product that has never been ordered?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest unit price among products that have never appeared in any order details.",
        "ANSWER_SQL": "SELECT ProductName, UnitPrice FROM Products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]) ORDER BY UnitPrice DESC LIMIT 1"}, 
    {"QUESTION_NO": 22,
        "GROUP_NO": 22,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which customers have ordered products from all categories?",
        "DISAMBIGUATED_QUESTION": "List customers who have placed orders for products from every category in the Categories table.",
        "ANSWER_SQL": "SELECT c.CustomerID, c.CompanyName FROM Customers c WHERE (SELECT COUNT(DISTINCT p.CategoryID) FROM Orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID WHERE o.CustomerID = c.CustomerID) = (SELECT COUNT(*) FROM Categories)"}, 
    {"QUESTION_NO": 23,
        "GROUP_NO": 23,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the average number of products per order for each customer?",
        "DISAMBIGUATED_QUESTION": "Calculate the average number of distinct products per order for each customer.",
        "ANSWER_SQL": "SELECT c.CustomerID, c.CompanyName, AVG(ProductCount) AS AvgProductsPerOrder FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN (SELECT OrderID, COUNT(DISTINCT ProductID) AS ProductCount FROM [Order Details] GROUP BY OrderID) pc ON o.OrderID = pc.OrderID GROUP BY c.CustomerID ORDER BY AvgProductsPerOrder DESC"}, 
    {"QUESTION_NO": 24,
        "GROUP_NO": 24,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product has the highest revenue to cost ratio?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest ratio of total revenue (sum of extended prices in order details) to total cost (unit price * units in stock).",
        "ANSWER_SQL": "SELECT p.ProductID, p.ProductName, (SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / (p.UnitPrice * p.UnitsInStock)) AS RevenueCostRatio FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID HAVING p.UnitsInStock > 0 ORDER BY RevenueCostRatio DESC LIMIT 1"}, 
    {"QUESTION_NO": 25,
        "GROUP_NO": 25,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's the most common product pair in orders?",
        "DISAMBIGUATED_QUESTION": "Find the pair of products that appear together most frequently in the same order.",
        "ANSWER_SQL": "SELECT p1.ProductName AS Product1, p2.ProductName AS Product2, COUNT(*) AS OrderCount FROM [Order Details] od1 JOIN [Order Details] od2 ON od1.OrderID = od2.OrderID AND od1.ProductID < od2.ProductID JOIN Products p1 ON od1.ProductID = p1.ProductID JOIN Products p2 ON od2.ProductID = p2.ProductID GROUP BY od1.ProductID, od2.ProductID ORDER BY OrderCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 26,
        "GROUP_NO": 26,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the big cheese in the Dairy biz?",
        "DISAMBIGUATED_QUESTION": "Find the supplier who provides the most products in the 'Dairy Products' category.",
        "ANSWER_SQL": "SELECT s.CompanyName, COUNT(*) AS ProductCount FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Dairy Products' GROUP BY s.SupplierID ORDER BY ProductCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 27,
        "GROUP_NO": 27,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which crew member's bringing home the bacon?",
        "DISAMBIGUATED_QUESTION": "Find the employee with the highest total sales amount across all orders.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1"}, 
    {"QUESTION_NO": 28,
        "GROUP_NO": 28,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's flying off the shelves faster than hot cakes?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest ratio of units sold to units in stock.",
        "ANSWER_SQL": "SELECT p.ProductName, SUM(od.Quantity) / NULLIF(p.UnitsInStock, 0) AS SoldToStockRatio FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID HAVING p.UnitsInStock > 0 ORDER BY SoldToStockRatio DESC LIMIT 1"}, 
    {"QUESTION_NO": 29,
        "GROUP_NO": 29,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the top dog in the City of Light?",
        "DISAMBIGUATED_QUESTION": "Find the customer with the highest total order value in Paris.",
        "ANSWER_SQL": "SELECT c.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalOrderValue FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE c.City = 'Paris' GROUP BY c.CustomerID ORDER BY TotalOrderValue DESC LIMIT 1"}, 
    {"QUESTION_NO": 30,
        "GROUP_NO": 30,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is the dark horse in sales?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest increase in sales quantity from 2016 to 2017.",
        "ANSWER_SQL": "WITH Sales2016 AS (SELECT ProductID, SUM(Quantity) AS Qty2016 FROM [Order Details] od JOIN Orders o ON od.OrderID = o.OrderID WHERE strftime('%Y', o.OrderDate) = '2016' GROUP BY ProductID), Sales2017 AS (SELECT ProductID, SUM(Quantity) AS Qty2017 FROM [Order Details] od JOIN Orders o ON od.OrderID = o.OrderID WHERE strftime('%Y', o.OrderDate) = '2017' GROUP BY ProductID) SELECT p.ProductName, (s17.Qty2017 - s16.Qty2016) AS Increase FROM Products p JOIN Sales2016 s16 ON p.ProductID = s16.ProductID JOIN Sales2017 s17 ON p.ProductID = s17.ProductID ORDER BY Increase DESC LIMIT 1"}, 
    {"QUESTION_NO": 31,
        "GROUP_NO": 31,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the globetrotter of our sales team?",
        "DISAMBIGUATED_QUESTION": "Find the employee who has sold products to the most different countries.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, COUNT(DISTINCT o.ShipCountry) AS CountriesServed FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY CountriesServed DESC LIMIT 1"}, 
    {"QUESTION_NO": 32,
        "GROUP_NO": 32,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is our golden goose?",
        "DISAMBIGUATED_QUESTION": "Find the product that has generated the highest total revenue.",
        "ANSWER_SQL": "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY TotalRevenue DESC LIMIT 1"}, 
    {"QUESTION_NO": 33,
        "GROUP_NO": 33,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the king of the jungle in our supplier network?",
        "DISAMBIGUATED_QUESTION": "Find the supplier who provides products across the most categories.",
        "ANSWER_SQL": "SELECT s.CompanyName, COUNT(DISTINCT p.CategoryID) AS CategoryCount FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY CategoryCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 34,
        "GROUP_NO": 34,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which city is our hidden gem for sales?",
        "DISAMBIGUATED_QUESTION": "Find the city with the highest average order value, excluding the top 5 cities by total order count.",
        "ANSWER_SQL": "WITH CityOrderCounts AS (SELECT ShipCity, COUNT(*) AS OrderCount, AVG(TotalValue) AS AvgOrderValue FROM Orders o JOIN (SELECT OrderID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalValue FROM [Order Details] GROUP BY OrderID) od ON o.OrderID = od.OrderID GROUP BY ShipCity) SELECT ShipCity, AvgOrderValue FROM CityOrderCounts WHERE ShipCity NOT IN (SELECT ShipCity FROM CityOrderCounts ORDER BY OrderCount DESC LIMIT 5) ORDER BY AvgOrderValue DESC LIMIT 1"}, 
    {"QUESTION_NO": 35,
        "GROUP_NO": 35,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the comeback kid of our product line?",
        "DISAMBIGUATED_QUESTION": "Find the product that had the lowest sales in 2016 but the highest sales in 2017.",
        "ANSWER_SQL": "WITH Sales2016 AS (SELECT ProductID,SUM(Quantity) AS Qty2016 FROM [Order Details] od JOIN Orders o ON od.OrderID = o.OrderID WHERE strftime('%Y', o.OrderDate) = '2016' GROUP BY ProductID),Sales2017 AS (SELECT ProductID ,SUM(Quantity) AS Qty2017 FROM [Order Details] od JOIN Orders o ON od.OrderID = o.OrderID WHERE strftime('%Y', o.OrderDate) = '2017' GROUP BY ProductID),Product_min_max_diff AS (SELECT s17.ProductID, (s17.Qty2017 - s16.Qty2016) as Quantity_growth FROM Sales2016 s16 JOIN Sales2017 s17 ON s16.ProductID = s17.ProductID GROUP BY s17.ProductID ORDER BY Quantity_growth DESC LIMIT 1) SELECT p.ProductName FROM Products p JOIN Product_min_max_diff pmmd ON p.ProductID = pmmd.ProductID"}, 
    {"QUESTION_NO": 36,
        "GROUP_NO": 36,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which customer is playing hard to get?",
        "DISAMBIGUATED_QUESTION": "Find the customer who has the longest average time between orders.",
        "ANSWER_SQL": "WITH OrderDates AS (SELECT CustomerID, OrderDate, LAG(OrderDate) OVER (PARTITION BY CustomerID ORDER BY OrderDate) AS PrevOrderDate FROM Orders) SELECT c.CompanyName, AVG(JULIANDAY(OrderDate) - JULIANDAY(PrevOrderDate)) AS AvgDaysBetweenOrders FROM OrderDates od JOIN Customers c ON od.CustomerID = c.CustomerID WHERE PrevOrderDate IS NOT NULL GROUP BY od.CustomerID ORDER BY AvgDaysBetweenOrders DESC LIMIT 1"}, 
    {"QUESTION_NO": 37,
        "GROUP_NO": 37,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product category is our cash cow?",
        "DISAMBIGUATED_QUESTION": "Find the category with the highest profit margin (assuming profit is 20% of revenue).",
        "ANSWER_SQL": "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount) * 0.2) AS TotalProfit FROM Categories c JOIN Products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID ORDER BY TotalProfit DESC LIMIT 1"}, 
    {"QUESTION_NO": 38,
        "GROUP_NO": 38,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the master of upselling in our team?",
        "DISAMBIGUATED_QUESTION": "Find the employee who has the highest average number of items per order.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, AVG(ItemCount) AS AvgItemsPerOrder FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN (SELECT OrderID, SUM(Quantity) AS ItemCount FROM [Order Details] GROUP BY OrderID) od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AvgItemsPerOrder DESC LIMIT 1"}, 
    {"QUESTION_NO": 39,
        "GROUP_NO": 39,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is the unsung hero of our inventory?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest ratio of total revenue to number of orders it appears in.",
        "ANSWER_SQL": "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT od.OrderID) AS RevenuePerOrder FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY RevenuePerOrder DESC LIMIT 1"}, 
    {"QUESTION_NO": 40,
        "GROUP_NO": 40,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the VIP in our customer base?",
        "DISAMBIGUATED_QUESTION": "Find the customer who has ordered the highest number of distinct products.",
        "ANSWER_SQL": "SELECT c.CompanyName, COUNT(DISTINCT od.ProductID) AS DistinctProducts FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY DistinctProducts DESC LIMIT 1"}, 
    {"QUESTION_NO": 41,
        "GROUP_NO": 41,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which supplier is our secret weapon?",
        "DISAMBIGUATED_QUESTION": "Find the supplier whose products have the highest average rating (assuming rating is inversely proportional to discount, i.e., lower discount means higher rating).",
        "ANSWER_SQL": "SELECT s.CompanyName, AVG(1 - od.Discount) AS AvgRating FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID ORDER BY AvgRating DESC LIMIT 1"}, 
    {"QUESTION_NO": 42,
        "GROUP_NO": 42,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is our slow burner?",
        "DISAMBIGUATED_QUESTION": "Find the product with the longest average time between consecutive orders.",
        "ANSWER_SQL": "WITH OrderDates AS (SELECT ProductID, OrderDate, LAG(OrderDate) OVER (PARTITION BY ProductID ORDER BY OrderDate) AS PrevOrderDate FROM [Order Details] od JOIN Orders o ON od.OrderID = o.OrderID) SELECT p.ProductName, AVG(JULIANDAY(OrderDate) - JULIANDAY(PrevOrderDate)) AS AvgDaysBetweenOrders FROM OrderDates od JOIN Products p ON od.ProductID = p.ProductID WHERE PrevOrderDate IS NOT NULL GROUP BY od.ProductID ORDER BY AvgDaysBetweenOrders DESC LIMIT 1"}, 
    {"QUESTION_NO": 43,
        "GROUP_NO": 43,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the master of disaster in our shipping department?",
        "DISAMBIGUATED_QUESTION": "Find the employee with the highest percentage of late shipments (shipped after required date).",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, SUM(CASE WHEN o.ShippedDate > o.RequiredDate THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS LateShipmentPercentage FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID ORDER BY LateShipmentPercentage DESC LIMIT 1"}, 
    {"QUESTION_NO": 44,
        "GROUP_NO": 44,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product category is our rising star?",
        "DISAMBIGUATED_QUESTION": "Find the category with the highest year-over-year growth in order quantity from 2016 to 2017.",
        "ANSWER_SQL": "WITH CategorySales AS (SELECT c.CategoryID, c.CategoryName, strftime('%Y', o.OrderDate) AS Year, SUM(od.Quantity) AS TotalQuantity FROM Categories c JOIN Products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE Year IN ('2016', '2017') GROUP BY c.CategoryID, Year) SELECT cs1.CategoryName, (cs2.TotalQuantity - cs1.TotalQuantity) * 100.0 / cs1.TotalQuantity AS GrowthPercentage FROM CategorySales cs1 JOIN CategorySales cs2 ON cs1.CategoryID = cs2.CategoryID AND cs1.Year = '2016' AND cs2.Year = '2017' ORDER BY GrowthPercentage DESC LIMIT 1"}, 
    {"QUESTION_NO": 45,
        "GROUP_NO": 45,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the smooth operator in our sales team?",
        "DISAMBIGUATED_QUESTION": "Find the employee with the highest ratio of distinct customers to total orders.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, COUNT(DISTINCT o.CustomerID) * 1.0 / COUNT(*) AS CustomerOrderRatio FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY CustomerOrderRatio DESC LIMIT 1"}, 
    {"QUESTION_NO": 46,
        "GROUP_NO": 46,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is our silent moneymaker?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest total revenue that has never been discounted.",
        "ANSWER_SQL": "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity) AS TotalRevenue FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount = 0 GROUP BY p.ProductID HAVING p.ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE Discount > 0) ORDER BY TotalRevenue DESC LIMIT 1"}, 
    {"QUESTION_NO": 47,
        "GROUP_NO": 47,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the chameleon in our customer base?",
        "DISAMBIGUATED_QUESTION": "Find the customer who has ordered from the most diverse set of categories.",
        "ANSWER_SQL": "SELECT c.CompanyName, COUNT(DISTINCT p.CategoryID) AS CategoryCount FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID GROUP BY c.CustomerID ORDER BY CategoryCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 48,
        "GROUP_NO": 48,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which city is our diamond in the rough?",
        "DISAMBIGUATED_QUESTION": "Find the city with the highest average order value among cities with fewer than 150 orders.",
        "ANSWER_SQL": "SELECT ShipCity, AVG(TotalValue) AS AvgOrderValue FROM Orders o JOIN (SELECT OrderID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalValue FROM [Order Details] GROUP BY OrderID) od ON o.OrderID = od.OrderID GROUP BY ShipCity HAVING COUNT(*) < 150 ORDER BY AvgOrderValue DESC LIMIT 1"}, 
    {"QUESTION_NO": 49,
        "GROUP_NO": 49,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the jack of all trades in our supplier network?",
        "DISAMBIGUATED_QUESTION": "Find the supplier who provides products in the most diverse set of price ranges.",
        "ANSWER_SQL": "WITH PriceRanges AS (SELECT ProductID, CASE WHEN UnitPrice < 10 THEN 1 WHEN UnitPrice < 20 THEN 2 WHEN UnitPrice < 50 THEN 3 ELSE 4 END AS PriceRange FROM Products) SELECT s.CompanyName, COUNT(DISTINCT pr.PriceRange) AS PriceRangeCount FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN PriceRanges pr ON p.ProductID = pr.ProductID GROUP BY s.SupplierID ORDER BY PriceRangeCount DESC LIMIT 1"}, 
    {"QUESTION_NO": 50,
        "GROUP_NO": 50,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is our steady eddie?",
        "DISAMBIGUATED_QUESTION": "Find the product with the most consistent order quantity across all its orders.",
        "ANSWER_SQL": "SELECT p.ProductName,AVG(od.Quantity) AS AvgQuantity, SQRT( AVG(od.Quantity*od.Quantity) - AVG(od.Quantity)* AVG(od.Quantity)) AS StdDevQuantity,(SQRT( AVG(od.Quantity*od.Quantity) - AVG(od.Quantity)* AVG(od.Quantity)))/ AVG(od.Quantity) AS CoefficientOfVariation FROM Products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY CoefficientOfVariation ASC LIMIT 1"}, 
    {"QUESTION_NO": 51,
        "GROUP_NO": 51,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the ninja of our shipping department?",
        "DISAMBIGUATED_QUESTION": "Find the employee with the highest percentage of orders shipped earlier than required.",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, SUM(CASE WHEN o.ShippedDate < o.RequiredDate THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS EarlyShipmentPercentage FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID ORDER BY EarlyShipmentPercentage DESC LIMIT 1"}, 
    {"QUESTION_NO": 52,
        "GROUP_NO": 52,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product category is our sleeping giant?",
        "DISAMBIGUATED_QUESTION": "Find the category with the highest ratio of total revenue to number of products in that category.",
        "ANSWER_SQL": "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT p.ProductID) AS RevenuePerProduct FROM Categories c JOIN Products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID ORDER BY RevenuePerProduct DESC LIMIT 1"}, 
    {"QUESTION_NO": 53,
        "GROUP_NO": 53,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the dark horse in our customer base?",
        "DISAMBIGUATED_QUESTION": "Find the customer who has the highest average order value among customers with fewer than 160 orders.",
        "ANSWER_SQL": "SELECT c.CompanyName, AVG(TotalValue) AS AvgOrderValue FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN (SELECT OrderID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalValue FROM [Order Details] GROUP BY OrderID) od ON o.OrderID = od.OrderID GROUP BY c.CustomerID HAVING COUNT(o.OrderID) < 160 ORDER BY AvgOrderValue DESC LIMIT 1"}, 
    {"QUESTION_NO": 54,
        "GROUP_NO": 54,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which product is our hidden gem in the rough?",
        "DISAMBIGUATED_QUESTION": "Find the product with the highest profit margin (assuming 20% of price is profit) that has been ordered less than 10 times.",
        "ANSWER_SQL": "SELECT p.ProductName, (p.UnitPrice * 0.2) AS ProfitMargin, COUNT(od.OrderID) AS OrderCount FROM Products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID HAVING OrderCount < 10 ORDER BY ProfitMargin DESC LIMIT 1"}, 
    {"QUESTION_NO": 55,
        "GROUP_NO": 55,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Who's the maestro of our inventory orchestra?",
        "DISAMBIGUATED_QUESTION": "Find the employee who has sold the widest variety of products (highest number of distinct products).",
        "ANSWER_SQL": "SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, COUNT(DISTINCT od.ProductID) AS DistinctProducts FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY DistinctProducts DESC LIMIT 1"}, 
    {"QUESTION_NO": 56,
        "GROUP_NO": 56,
        "SUBQUESTION_NO": 0,
        "QUESTION": "Which supplier is our secret sauce maker?",
        "DISAMBIGUATED_QUESTION": "Find the supplier whose products have the highest average quantity per order.",
        "ANSWER_SQL": "SELECT s.CompanyName, AVG(od.Quantity) AS AvgQuantityPerOrder FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID ORDER BY AvgQuantityPerOrder DESC LIMIT 1"}, 
    {"QUESTION_NO": 57,
        "GROUP_NO": 57,
        "SUBQUESTION_NO": 0,
        "QUESTION": "What's our golden ratio of product combos?",
        "DISAMBIGUATED_QUESTION": "Find the pair of products that, when ordered together, result in the highest average total order value.",
        "ANSWER_SQL": "WITH ProductPairs AS (SELECT od1.ProductID AS Product1, od2.ProductID AS Product2, o.OrderID FROM [Order Details] od1 JOIN [Order Details] od2 ON od1.OrderID = od2.OrderID AND od1.ProductID < od2.ProductID JOIN Orders o ON od1.OrderID = o.OrderID) SELECT p1.ProductName AS Product1Name, p2.ProductName AS Product2Name, AVG(TotalValue) AS AvgOrderValue FROM ProductPairs pp JOIN (SELECT OrderID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalValue FROM [Order Details] GROUP BY OrderID) od ON pp.OrderID = od.OrderID JOIN Products p1 ON pp.Product1 = p1.ProductID JOIN Products p2 ON pp.Product2 = p2.ProductID GROUP BY pp.Product1, pp.Product2 ORDER BY AvgOrderValue DESC LIMIT 1"}]