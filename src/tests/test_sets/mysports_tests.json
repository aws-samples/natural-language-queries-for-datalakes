[
  {"QUESTION_NO": 1,
    "GROUP_NO": 1,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the oldest player in the database?",
    "DISAMBIGUATED_QUESTION": "Which player has the earliest date of birth in the Players table?",
    "ANSWER_SQL": "SELECT FirstName, LastName, DateOfBirth FROM Players ORDER BY DateOfBirth ASC LIMIT 1;"}, 
  {"QUESTION_NO": 2,
    "GROUP_NO": 2,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many different sports are represented in the database?",
    "DISAMBIGUATED_QUESTION": "What is the count of distinct sports in the Sports table?",
    "ANSWER_SQL": "SELECT COUNT(DISTINCT SportName) FROM Sports;"}, 
  {"QUESTION_NO": 3,
    "GROUP_NO": 3,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team has won the most games in a single season?",
    "DISAMBIGUATED_QUESTION": "Which team has the highest number of wins in a single season according to the TeamStats table?",
    "ANSWER_SQL": "SELECT t.TeamName, ts.Wins FROM Teams t JOIN TeamStats ts ON t.TeamID = ts.TeamID ORDER BY ts.Wins DESC LIMIT 1;"}, 
  {"QUESTION_NO": 4,
    "GROUP_NO": 4,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the coach with the longest current tenure?",
    "DISAMBIGUATED_QUESTION": "Which coach has the earliest start date with no end date in the CoachingHistory table?",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, ch.StartDate FROM Coaches c JOIN CoachingHistory ch ON c.CoachID = ch.CoachID WHERE ch.EndDate IS NULL ORDER BY ch.StartDate ASC LIMIT 1;"}, 
  {"QUESTION_NO": 5,
    "GROUP_NO": 5,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average capacity of all venues?",
    "DISAMBIGUATED_QUESTION": "What is the mean capacity of all venues in the Venues table?",
    "ANSWER_SQL": "SELECT AVG(Capacity) FROM Venues;"}, 
  {"QUESTION_NO": 6,
    "GROUP_NO": 6,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which league has the most teams?",
    "DISAMBIGUATED_QUESTION": "Which league has the highest count of associated teams in the Teams table?",
    "ANSWER_SQL": "SELECT l.LeagueName, COUNT(t.TeamID) as TeamCount FROM Leagues l JOIN Teams t ON l.SportID = t.SportID GROUP BY l.LeagueID ORDER BY TeamCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 7,
    "GROUP_NO": 7,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who scored the most points in a single game?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest PointsScored in a single game according to the PlayerStats table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, ps.PointsScored FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID ORDER BY ps.PointsScored DESC LIMIT 1;"}, 
  {"QUESTION_NO": 8,
    "GROUP_NO": 8,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most expensive contract in the database?",
    "DISAMBIGUATED_QUESTION": "Which contract has the highest AnnualSalary in the Contracts table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, c.AnnualSalary FROM Players p JOIN Contracts c ON p.PlayerID = c.PlayerID ORDER BY c.AnnualSalary DESC LIMIT 1;"}, 
  {"QUESTION_NO": 9,
    "GROUP_NO": 9,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which tournament had the highest attendance?",
    "DISAMBIGUATED_QUESTION": "Which tournament has the highest total attendance across all its games in the Games table?",
    "ANSWER_SQL": "SELECT t.TournamentName, SUM(g.Attendance) as TotalAttendance FROM Tournaments t JOIN Games g ON t.TournamentID = g.GameID GROUP BY t.TournamentID ORDER BY TotalAttendance DESC LIMIT 1;"}, 
  {"QUESTION_NO": 10,
    "GROUP_NO": 10,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the most followed athlete on social media?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest number of followers across all platforms in the SocialMediaAccounts table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, SUM(sma.Followers) as TotalFollowers FROM Players p JOIN SocialMediaAccounts sma ON p.PlayerID = sma.EntityID WHERE sma.EntityType = 'Player' GROUP BY p.PlayerID ORDER BY TotalFollowers DESC LIMIT 1;"}, 
  {"QUESTION_NO": 11,
    "GROUP_NO": 11,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most common injury type?",
    "DISAMBIGUATED_QUESTION": "What is the most frequently occurring InjuryType in the Injuries table?",
    "ANSWER_SQL": "SELECT InjuryType, COUNT(*) as Occurrences FROM Injuries GROUP BY InjuryType ORDER BY Occurrences DESC LIMIT 1;"}, 
  {"QUESTION_NO": 12,
    "GROUP_NO": 12,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sponsor has the longest-running deal?",
    "DISAMBIGUATED_QUESTION": "Which sponsor has the sponsorship deal with the longest duration in the SponsorshipDeals table?",
    "ANSWER_SQL": "SELECT s.SponsorName, (julianday(sd.EndDate) - julianday(sd.StartDate)) as DealDuration FROM Sponsors s JOIN SponsorshipDeals sd ON s.SponsorID = sd.SponsorID ORDER BY DealDuration DESC LIMIT 1;"}, 
  {"QUESTION_NO": 13,
    "GROUP_NO": 13,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average age of all players?",
    "DISAMBIGUATED_QUESTION": "What is the mean age of all players in the Players table, calculated from their date of birth?",
    "ANSWER_SQL": "SELECT AVG((julianday(date('now')) - julianday(DateOfBirth)) / 365) as AverageAge FROM Players;"}, 
  {"QUESTION_NO": 14,
    "GROUP_NO": 14,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team has the most valuable merchandise?",
    "DISAMBIGUATED_QUESTION": "Which team has the highest total value of merchandise (price * stock quantity) in the Merchandise table?",
    "ANSWER_SQL": "SELECT t.TeamName, SUM(m.Price * m.StockQuantity) as TotalValue FROM Teams t JOIN Merchandise m ON t.TeamID = m.TeamID GROUP BY t.TeamID ORDER BY TotalValue DESC LIMIT 1;"}, 
  {"QUESTION_NO": 15,
    "GROUP_NO": 15,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the referee that's officiated the most games?",
    "DISAMBIGUATED_QUESTION": "Which referee has been assigned to the highest number of games in the GameOfficials table?",
    "ANSWER_SQL": "SELECT r.FirstName, r.LastName, COUNT(*) as GamesOfficiated FROM Referees r JOIN GameOfficials go ON r.RefereeID = go.RefereeID GROUP BY r.RefereeID ORDER BY GamesOfficiated DESC LIMIT 1;"}, 
  {"QUESTION_NO": 16,
    "GROUP_NO": 16,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most bet-on game?",
    "DISAMBIGUATED_QUESTION": "Which game has the highest total bet amount in the Bets table?",
    "ANSWER_SQL": "SELECT g.GameID, t1.TeamName as HomeTeam, t2.TeamName as AwayTeam, SUM(b.BetAmount) as TotalBetAmount FROM Games g JOIN Teams t1 ON g.HomeTeamID = t1.TeamID JOIN Teams t2 ON g.AwayTeamID = t2.TeamID JOIN Bets b ON g.GameID = b.GameID GROUP BY g.GameID ORDER BY TotalBetAmount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 17,
    "GROUP_NO": 17,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which player has been transferred for the highest fee?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest TransferFee in the Transfers table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, t.TransferFee FROM Players p JOIN Transfers t ON p.PlayerID = t.PlayerID ORDER BY t.TransferFee DESC LIMIT 1;"}, 
  {"QUESTION_NO": 18,
    "GROUP_NO": 18,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most watched game on TV?",
    "DISAMBIGUATED_QUESTION": "Which game has the highest ViewershipMillions in the MediaCoverage table?",
    "ANSWER_SQL": "SELECT g.GameID, t1.TeamName as HomeTeam, t2.TeamName as AwayTeam, mc.ViewershipMillions FROM Games g JOIN Teams t1 ON g.HomeTeamID = t1.TeamID JOIN Teams t2 ON g.AwayTeamID = t2.TeamID JOIN MediaCoverage mc ON g.GameID = mc.GameID ORDER BY mc.ViewershipMillions DESC LIMIT 1;"}, 
  {"QUESTION_NO": 19,
    "GROUP_NO": 19,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team has the largest fan club?",
    "DISAMBIGUATED_QUESTION": "Which team has the fan club with the highest MemberCount in the FanClubs table?",
    "ANSWER_SQL": "SELECT t.TeamName, fc.MemberCount FROM Teams t JOIN FanClubs fc ON t.TeamID = fc.TeamID ORDER BY fc.MemberCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 20,
    "GROUP_NO": 20,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most common diet type among players?",
    "DISAMBIGUATED_QUESTION": "What is the most frequently occurring DietType in the NutritionPlans table?",
    "ANSWER_SQL": "SELECT DietType, COUNT(*) as Occurrences FROM NutritionPlans GROUP BY DietType ORDER BY Occurrences DESC LIMIT 1;"}, 
  {"QUESTION_NO": 21,
    "GROUP_NO": 21,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which training program has the longest duration?",
    "DISAMBIGUATED_QUESTION": "Which training program has the longest duration (difference between EndDate and StartDate) in the TrainingPrograms table?",
    "ANSWER_SQL": "SELECT ProgramName, (julianday(EndDate) - julianday(StartDate)) as Duration FROM TrainingPrograms ORDER BY Duration DESC LIMIT 1;"}, 
  {"QUESTION_NO": 22,
    "GROUP_NO": 22,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the player with the most diverse skill set?",
    "DISAMBIGUATED_QUESTION": "Which player is associated with the highest number of different sport-specific player tables (e.g., FootballPlayers, BasketballPlayers, etc.)?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT 'Table') as SportCount FROM Players p LEFT JOIN FootballPlayers fp ON p.PlayerID = fp.PlayerID LEFT JOIN BasketballPlayers bp ON p.PlayerID = bp.PlayerID LEFT JOIN BaseballPlayers bap ON p.PlayerID = bap.PlayerID LEFT JOIN TennisPlayers tp ON p.PlayerID = tp.PlayerID LEFT JOIN GolfPlayers gp ON p.PlayerID = gp.PlayerID LEFT JOIN HockeyPlayers hp ON p.PlayerID = hp.PlayerID LEFT JOIN SoccerPlayers sp ON p.PlayerID = sp.PlayerID LEFT JOIN CricketPlayers cp ON p.PlayerID = cp.PlayerID LEFT JOIN RugbyPlayers rp ON p.PlayerID = rp.PlayerID LEFT JOIN Boxers b ON p.PlayerID = b.PlayerID LEFT JOIN MMAFighters mf ON p.PlayerID = mf.PlayerID LEFT JOIN TrackAndFieldAthletes tfa ON p.PlayerID = tfa.PlayerID LEFT JOIN Swimmers s ON p.PlayerID = s.PlayerID GROUP BY p.PlayerID ORDER BY SportCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 23,
    "GROUP_NO": 23,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average duration of a game for each sport?",
    "DISAMBIGUATED_QUESTION": "What is the mean Duration in the GameStats table, grouped by SportID?",
    "ANSWER_SQL": "SELECT s.SportName, AVG(gs.Duration) as AverageDuration FROM Sports s JOIN Games g ON s.SportID = g.SportID JOIN GameStats gs ON g.GameID = gs.GameID GROUP BY s.SportID;"}, 
  {"QUESTION_NO": 24,
    "GROUP_NO": 24,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which venue has hosted the most diverse range of sports?",
    "DISAMBIGUATED_QUESTION": "Which venue has been used for the highest number of distinct sports in the Games table?",
    "ANSWER_SQL": "SELECT v.VenueName, COUNT(DISTINCT g.SportID) as SportCount FROM Venues v JOIN Games g ON v.VenueID = g.VenueID GROUP BY v.VenueID ORDER BY SportCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 25,
    "GROUP_NO": 25,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the GOAT of all sports?",
    "DISAMBIGUATED_QUESTION": "Which player has won the most individual awards across all sports in the AwardWinners table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, COUNT(*) as AwardCount FROM Players p JOIN AwardWinners aw ON p.PlayerID = aw.WinnerID JOIN Awards a ON aw.AwardID = a.AwardID WHERE aw.WinnerType = 'Player' AND a.AwardType = 'Individual' GROUP BY p.PlayerID ORDER BY AwardCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 26,
    "GROUP_NO": 26,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which city is the sports capital of the world?",
    "DISAMBIGUATED_QUESTION": "Which city has hosted the highest number of games across all sports in the Games and Venues tables?",
    "ANSWER_SQL": "SELECT v.City, COUNT(*) as GameCount FROM Venues v JOIN Games g ON v.VenueID = g.VenueID GROUP BY v.City ORDER BY GameCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 27,
    "GROUP_NO": 27,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the richest player in the game?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest total earnings from contracts and sponsorship deals combined?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, (COALESCE(c.AnnualSalary, 0) + COALESCE(sd.DealValue, 0)) as TotalEarnings FROM Players p LEFT JOIN Contracts c ON p.PlayerID = c.PlayerID LEFT JOIN SponsorshipDeals sd ON p.PlayerID = sd.EntityID AND sd.EntityType = 'Player' ORDER BY TotalEarnings DESC LIMIT 1;"}, 
  {"QUESTION_NO": 28,
    "GROUP_NO": 28,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sport's got the most dough?",
    "DISAMBIGUATED_QUESTION": "Which sport has the highest total value of sponsorship deals in the SponsorshipDeals table?",
    "ANSWER_SQL": "SELECT s.SportName, SUM(sd.DealValue) as TotalDealValue FROM Sports s JOIN SponsorshipDeals sd ON s.SportID = sd.EntityID WHERE sd.EntityType = 'Tournament' GROUP BY s.SportID ORDER BY TotalDealValue DESC LIMIT 1;"}, 
  {"QUESTION_NO": 29,
    "GROUP_NO": 29,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the king of social media in the sports world?",
    "DISAMBIGUATED_QUESTION": "Which entity (player or team) has the highest total number of followers across all social media platforms?",
    "ANSWER_SQL": "SELECT CASE WHEN p.PlayerID IS NOT NULL THEN (p.FirstName || ' ' || p.LastName) ELSE t.TeamName END as Entity, SUM(sma.Followers) as TotalFollowers FROM SocialMediaAccounts sma LEFT JOIN Players p ON sma.EntityID = p.PlayerID AND sma.EntityType = 'Player' LEFT JOIN Teams t ON sma.EntityID = t.TeamID AND sma.EntityType = 'Team' GROUP BY CASE WHEN p.PlayerID IS NOT NULL THEN p.PlayerID ELSE t.TeamID END ORDER BY TotalFollowers DESC LIMIT 1;"}, 
  {"QUESTION_NO": 30,
    "GROUP_NO": 30,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most stacked trophy cabinet?",
    "DISAMBIGUATED_QUESTION": "Which team has won the most awards according to the AwardWinners table?",
    "ANSWER_SQL": "SELECT t.TeamName, COUNT(*) as AwardCount FROM Teams t JOIN AwardWinners aw ON t.TeamID = aw.WinnerID WHERE aw.WinnerType = 'Team' GROUP BY t.TeamID ORDER BY AwardCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 31,
    "GROUP_NO": 31,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest underdog that came out on top?",
    "DISAMBIGUATED_QUESTION": "Which player or team with the highest odds (least favored) actually won their game?",
    "ANSWER_SQL": "SELECT CASE WHEN g.HomeTeamID = gs.WinnerID THEN t1.TeamName ELSE t2.TeamName END as Winner, CASE WHEN g.HomeTeamID = gs.WinnerID THEN bo.HomeTeamOdds ELSE bo.AwayTeamOdds END as Odds FROM Games g JOIN GameStats gs ON g.GameID = gs.GameStatID JOIN BettingOdds bo ON g.GameID = bo.GameID JOIN Teams t1 ON g.HomeTeamID = t1.TeamID JOIN Teams t2 ON g.AwayTeamID = t2.TeamID ORDER BY Odds DESC LIMIT 1;"}, 
  {"QUESTION_NO": 32,
    "GROUP_NO": 32,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which player's got the most impressive comeback from injury?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest increase in PointsScored in PlayerStats after returning from an injury recorded in the Injuries table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, (ps_after.PointsScored - ps_before.PointsScored) as PointsIncrease FROM Players p JOIN Injuries i ON p.PlayerID = i.PlayerID JOIN PlayerStats ps_before ON p.PlayerID = ps_before.PlayerID AND ps_before.SeasonID = (SELECT SeasonID FROM Seasons WHERE StartDate <= i.InjuryDate ORDER BY StartDate DESC LIMIT 1) JOIN PlayerStats ps_after ON p.PlayerID = ps_after.PlayerID AND ps_after.SeasonID = (SELECT SeasonID FROM Seasons WHERE StartDate > i.InjuryDate ORDER BY StartDate ASC LIMIT 1) ORDER BY PointsIncrease DESC LIMIT 1;"}, 
  {"QUESTION_NO": 33,
    "GROUP_NO": 33,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most rabid fanbase?",
    "DISAMBIGUATED_QUESTION": "Which team has the highest ratio of fan club members to stadium capacity?",
    "ANSWER_SQL": "SELECT t.TeamName, (fc.MemberCount * 1.0 / v.Capacity) as FanRatio FROM Teams t JOIN FanClubs fc ON t.TeamID = fc.TeamID JOIN Venues v ON t.TeamID = v.VenueID ORDER BY FanRatio DESC LIMIT 1;"}, 
  {"QUESTION_NO": 34,
    "GROUP_NO": 34,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest fish in the smallest pond?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest PointsScored in PlayerStats while playing for the team with the smallest home venue capacity?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, ps.PointsScored, v.Capacity FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN Teams t ON ps.TeamID = t.TeamID JOIN Venues v ON t.TeamID = v.VenueID ORDER BY ps.PointsScored DESC, v.Capacity ASC LIMIT 1;"}, 
  {"QUESTION_NO": 35,
    "GROUP_NO": 35,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sport's got the most globe-trotting athletes?",
    "DISAMBIGUATED_QUESTION": "Which sport has players from the highest number of distinct nationalities in the Players table?",
    "ANSWER_SQL": "SELECT s.SportName, COUNT(DISTINCT p.Nationality) as NationalityCount FROM Sports s JOIN Players p ON s.SportID = p.SportID GROUP BY s.SportID ORDER BY NationalityCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 36,
    "GROUP_NO": 36,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the ultimate iron man of sports?",
    "DISAMBIGUATED_QUESTION": "Which player has participated in the highest number of games across all seasons in the PlayerStats table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, SUM(ps.GamesPlayed) as TotalGames FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID GROUP BY p.PlayerID ORDER BY TotalGames DESC LIMIT 1;"}, 
  {"QUESTION_NO": 37,
    "GROUP_NO": 37,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most international flavor?",
    "DISAMBIGUATED_QUESTION": "Which team has players from the highest number of different countries in the Players table?",
    "ANSWER_SQL": "SELECT t.TeamName, COUNT(DISTINCT p.Nationality) as NationalityCount FROM Teams t JOIN PlayerStats ps ON t.TeamID = ps.TeamID JOIN Players p ON ps.PlayerID = p.PlayerID GROUP BY t.TeamID ORDER BY NationalityCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 38,
    "GROUP_NO": 38,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest bang for the buck in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest ratio of PointsScored to AnnualSalary in the PlayerStats and Contracts tables?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, (ps.PointsScored * 1.0 / c.AnnualSalary) as PointsPerDollar FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN Contracts c ON p.PlayerID = c.PlayerID ORDER BY PointsPerDollar DESC LIMIT 1;"}, 
  {"QUESTION_NO": 39,
    "GROUP_NO": 39,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which city's got the most diverse sports scene?",
    "DISAMBIGUATED_QUESTION": "Which city hosts venues for the highest number of different sports in the Venues table?",
    "ANSWER_SQL": "SELECT v.City, COUNT(DISTINCT s.SportID) as SportCount FROM Venues v JOIN Games g ON v.VenueID = g.VenueID JOIN Sports s ON g.SportID = s.SportID GROUP BY v.City ORDER BY SportCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 40,
    "GROUP_NO": 40,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the ultimate clutch player?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest average PointsScored in games where their team won by a margin of 5 points or less?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, AVG(ps.PointsScored) as AvgClutchPoints FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN Games g ON ps.TeamID = g.HomeTeamID OR ps.TeamID = g.AwayTeamID JOIN GameStats gs ON g.GameID = gs.GameStatID WHERE ABS(gs.HomeTeamScore - gs.AwayTeamScore) <= 5 AND ((g.HomeTeamID = ps.TeamID AND gs.HomeTeamScore > gs.AwayTeamScore) OR (g.AwayTeamID = ps.TeamID AND gs.AwayTeamScore > gs.HomeTeamScore)) GROUP BY p.PlayerID ORDER BY AvgClutchPoints DESC LIMIT 1;"}, 
  {"QUESTION_NO": 41,
    "GROUP_NO": 41,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most Jekyll and Hyde personality?",
    "DISAMBIGUATED_QUESTION": "Which team has the biggest difference between their home and away win percentages?",
    "ANSWER_SQL": "SELECT t.TeamName, (SUM(CASE WHEN g.HomeTeamID = t.TeamID AND gs.HomeTeamScore > gs.AwayTeamScore THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN g.HomeTeamID = t.TeamID THEN 1 ELSE 0 END)) - (SUM(CASE WHEN g.AwayTeamID = t.TeamID AND gs.AwayTeamScore > gs.HomeTeamScore THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN g.AwayTeamID = t.TeamID THEN 1 ELSE 0 END)) as WinPercentageDifference FROM Teams t JOIN Games g ON t.TeamID = g.HomeTeamID OR t.TeamID = g.AwayTeamID JOIN GameStats gs ON g.GameID = gs.GameStatID GROUP BY t.TeamID ORDER BY ABS(WinPercentageDifference) DESC LIMIT 1;"}, 
  {"QUESTION_NO": 42,
    "GROUP_NO": 42,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest party animal in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest number of social media posts (assuming each account posts once per follower) according to the SocialMediaAccounts table?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, SUM(sma.Followers) as TotalPosts FROM Players p JOIN SocialMediaAccounts sma ON p.PlayerID = sma.EntityID WHERE sma.EntityType = 'Player' GROUP BY p.PlayerID ORDER BY TotalPosts DESC LIMIT 1;"}, 
  {"QUESTION_NO": 43,
    "GROUP_NO": 43,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sport's got the most unpredictable outcomes?",
    "DISAMBIGUATED_QUESTION": "Which sport has the highest percentage of games where the underdog (team with higher odds) won?",
    "ANSWER_SQL": "SELECT s.SportName, (SUM(CASE WHEN (g.HomeTeamID = gs.WinnerID AND bo.HomeTeamOdds > bo.AwayTeamOdds) OR (g.AwayTeamID = gs.WinnerID AND bo.AwayTeamOdds > bo.HomeTeamOdds) THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) as UnderdogWinPercentage FROM Sports s JOIN Games g ON s.SportID = g.SportID JOIN GameStats gs ON g.GameID = gs.GameStatID JOIN BettingOdds bo ON g.GameID = bo.GameID GROUP BY s.SportID ORDER BY UnderdogWinPercentage DESC LIMIT 1;"}, 
  {"QUESTION_NO": 44,
    "GROUP_NO": 44,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest globetrotter in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has played home games in the most different countries throughout their career?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT v.Country) as CountriesPlayed FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN Games g ON ps.TeamID = g.HomeTeamID JOIN Venues v ON g.VenueID = v.VenueID GROUP BY p.PlayerID ORDER BY CountriesPlayed DESC LIMIT 1;"}, 
  {"QUESTION_NO": 45,
    "GROUP_NO": 45,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most well-rounded roster?",
    "DISAMBIGUATED_QUESTION": "Which team has the most even distribution of PointsScored among its top 5 scoring players?",
    "ANSWER_SQL": "WITH TopScorers AS (SELECT ps.TeamID, p.PlayerID, p.FirstName, p.LastName, ps.PointsScored, ROW_NUMBER() OVER (PARTITION BY ps.TeamID ORDER BY ps.PointsScored DESC) as Rank FROM PlayerStats ps JOIN Players p ON ps.PlayerID = p.PlayerID ) SELECT t.TeamName, SQRT(SUM(POWER(ts.PointsScored - (SELECT AVG(PointsScored) FROM TopScorers ts2 WHERE ts2.TeamID = ts.TeamID), 2)) / COUNT(*)) as PointsStdDev FROM Teams t JOIN TopScorers ts ON t.TeamID = ts.TeamID WHERE ts.Rank <= 5 GROUP BY t.TeamID ORDER BY PointsStdDev ASC LIMIT 1;"}, 
  {"QUESTION_NO": 46,
    "GROUP_NO": 46,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest comeback kid in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest average point difference between the first and second half of games?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, AVG(ps.PointsScored - ps_first_half.PointsScored) as AvgSecondHalfImprovement FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN PlayerStats ps_first_half ON p.PlayerID = ps_first_half.PlayerID AND ps.GameID = ps_first_half.GameID AND ps_first_half.Period <= 2 WHERE ps.Period > 2 GROUP BY p.PlayerID ORDER BY AvgSecondHalfImprovement DESC LIMIT 1;"}, 
  {"QUESTION_NO": 47,
    "GROUP_NO": 47,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sport's got the most nail-biting finishes?",
    "DISAMBIGUATED_QUESTION": "Which sport has the highest percentage of games decided by a margin of 5 points or less?",
    "ANSWER_SQL": "SELECT s.SportName, (SUM(CASE WHEN ABS(gs.HomeTeamScore - gs.AwayTeamScore) <= 5 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) as CloseGamePercentage FROM Sports s JOIN Games g ON s.SportID = g.SportID JOIN GameStats gs ON g.GameID = gs.GameStatID GROUP BY s.SportID ORDER BY CloseGamePercentage DESC LIMIT 1;"}, 
  {"QUESTION_NO": 48,
    "GROUP_NO": 48,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest giant killer in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has won the most games against top-ranked opponents (assuming rank is based on win percentage)?",
    "ANSWER_SQL": "WITH TeamRanks AS (SELECT TeamID, RANK() OVER (ORDER BY (Wins * 1.0 / (Wins + Losses + Draws)) DESC) as Rank FROM TeamStats) SELECT p.FirstName, p.LastName, COUNT(*) as GiantKills FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN Games g ON ps.TeamID = g.HomeTeamID OR ps.TeamID = g.AwayTeamID JOIN GameStats gs ON g.GameID = gs.GameStatID JOIN TeamRanks tr ON (g.HomeTeamID = tr.TeamID AND g.AwayTeamID = ps.TeamID AND gs.AwayTeamScore > gs.HomeTeamScore) OR (g.AwayTeamID = tr.TeamID AND g.HomeTeamID = ps.TeamID AND gs.HomeTeamScore > gs.AwayTeamScore) WHERE tr.Rank <= 5 GROUP BY p.PlayerID ORDER BY GiantKills DESC LIMIT 1;"}, 
  {"QUESTION_NO": 49,
    "GROUP_NO": 49,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most ride-or-die fans?",
    "DISAMBIGUATED_QUESTION": "Which team has the highest average attendance percentage (relative to stadium capacity) in their losing games?",
    "ANSWER_SQL": "SELECT t.TeamName, AVG(g.Attendance * 100.0 / v.Capacity) as AvgAttendancePercentage FROM Teams t JOIN Games g ON t.TeamID = g.HomeTeamID JOIN Venues v ON g.VenueID = v.VenueID JOIN GameStats gs ON g.GameID = gs.GameStatID WHERE gs.HomeTeamScore < gs.AwayTeamScore GROUP BY t.TeamID ORDER BY AvgAttendancePercentage DESC LIMIT 1;"}, 
  {"QUESTION_NO": 50,
    "GROUP_NO": 50,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest money maker in sports?",
    "DISAMBIGUATED_QUESTION": "Which player generates the most revenue through a combination of their contract, sponsorship deals, and merchandise sales?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, (COALESCE(c.AnnualSalary, 0) + COALESCE(sd.DealValue, 0) + COALESCE(m.Revenue, 0)) as TotalRevenue FROM Players p LEFT JOIN Contracts c ON p.PlayerID = c.PlayerID LEFT JOIN SponsorshipDeals sd ON p.PlayerID = sd.EntityID AND sd.EntityType = 'Player' LEFT JOIN (SELECT PlayerID, SUM(Price * StockQuantity) as Revenue FROM Merchandise WHERE ItemType LIKE '%Jersey%' GROUP BY PlayerID) m ON p.PlayerID = m.PlayerID ORDER BY TotalRevenue DESC LIMIT 1;"}, 
  {"QUESTION_NO": 51,
    "GROUP_NO": 51,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sport's got the most fickle fans?",
    "DISAMBIGUATED_QUESTION": "Which sport has the highest variance in attendance numbers across all games?",
    "ANSWER_SQL": "SELECT s.SportName, SUM(POWER(g.Attendance - (SELECT AVG(Attendance) FROM Games gs2 WHERE gs2.SportID = s.SportID), 2)) / COUNT(*) as AttendanceVariance FROM Sports s JOIN Games g ON s.SportID = g.SportID GROUP BY s.SportID ORDER BY AttendanceVariance DESC LIMIT 1;"}, 
  {"QUESTION_NO": 52,
    "GROUP_NO": 52,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the ultimate iron man of coaches?",
    "DISAMBIGUATED_QUESTION": "Which coach has the longest cumulative coaching tenure across all teams?",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, SUM((julianday(COALESCE(ch.EndDate, date('now'))) - julianday(ch.StartDate))) as TotalDaysCoaching FROM Coaches c JOIN CoachingHistory ch ON c.CoachID = ch.CoachID GROUP BY c.CoachID ORDER BY TotalDaysCoaching DESC LIMIT 1;"}, 
  {"QUESTION_NO": 53,
    "GROUP_NO": 53,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most Jekyll and Hyde seasons?",
    "DISAMBIGUATED_QUESTION": "Which team has the highest variance in win percentages across different seasons?",
    "ANSWER_SQL": "SELECT t.TeamName, SUM(POWER((ts.Wins * 1.0) / (ts.Wins + ts.Losses + ts.Draws) - (SELECT AVG((Wins * 1.0) / (Wins + Losses + Draws)) FROM TeamStats ts2), 2)) / COUNT(*) as WinPercentageVariance FROM Teams t JOIN TeamStats ts ON t.TeamID = ts.TeamID GROUP BY t.TeamID ORDER BY WinPercentageVariance DESC LIMIT 1;"}, 
  {"QUESTION_NO": 54,
    "GROUP_NO": 54,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the biggest social media influencer in the sports world?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest engagement rate (assuming engagement is proportional to follower count) across all social media platforms?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, SUM(sma.Followers) as TotalEngagement, COUNT(DISTINCT sma.Platform) as PlatformCount, SUM(sma.Followers) / COUNT(DISTINCT sma.Platform) as AvgEngagementPerPlatform FROM Players p JOIN SocialMediaAccounts sma ON p.PlayerID = sma.EntityID WHERE sma.EntityType = 'Player' GROUP BY p.PlayerID ORDER BY AvgEngagementPerPlatform DESC LIMIT 1;"}, 
  {"QUESTION_NO": 55,
    "GROUP_NO": 55,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which team's got the most bang for their buck?",
    "DISAMBIGUATED_QUESTION": "Which team has the highest ratio of wins to total player salaries?",
    "ANSWER_SQL": "SELECT t.TeamName, ts.Wins * 1.0 / SUM(c.AnnualSalary) as WinsPerDollar FROM Teams t JOIN TeamStats ts ON t.TeamID = ts.TeamID JOIN Contracts c ON t.TeamID = c.TeamID GROUP BY t.TeamID ORDER BY WinsPerDollar DESC LIMIT 1;"}, 
  {"QUESTION_NO": 56,
    "GROUP_NO": 56,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the ultimate comeback king in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has won the most games where their team was trailing at halftime?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, COUNT(*) as ComebackWins FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID JOIN Games g ON ps.TeamID = g.HomeTeamID OR ps.TeamID = g.AwayTeamID JOIN GameStats gs ON g.GameID = gs.GameStatID JOIN GameStats gs_half ON g.GameID = gs_half.GameStatID WHERE ((g.HomeTeamID = ps.TeamID AND gs_half.HomeTeamScore < gs_half.AwayTeamScore AND gs.HomeTeamScore > gs.AwayTeamScore) OR (g.AwayTeamID = ps.TeamID AND gs_half.AwayTeamScore < gs_half.HomeTeamScore AND gs.AwayTeamScore > gs.HomeTeamScore)) AND gs_half.Period = 2 GROUP BY p.PlayerID ORDER BY ComebackWins DESC LIMIT 1;"}, 
  {"QUESTION_NO": 57,
    "GROUP_NO": 57,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which sport's got the most globe-trotting events?",
    "DISAMBIGUATED_QUESTION": "Which sport has held events in the most diverse set of countries?",
    "ANSWER_SQL": "SELECT s.SportName, COUNT(DISTINCT v.Country) as CountryCount FROM Sports s JOIN Games g ON s.SportID = g.SportID JOIN Venues v ON g.VenueID = v.VenueID GROUP BY s.SportID ORDER BY CountryCount DESC LIMIT 1;"}, 
  {"QUESTION_NO": 58,
    "GROUP_NO": 58,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the ultimate team player in sports?",
    "DISAMBIGUATED_QUESTION": "Which player has the highest ratio of assists to personal points scored across all games?",
    "ANSWER_SQL": "SELECT p.FirstName, p.LastName, SUM(ps.Assists) * 1.0 / SUM(ps.PointsScored) as AssistToPointRatio FROM Players p JOIN PlayerStats ps ON p.PlayerID = ps.PlayerID GROUP BY p.PlayerID HAVING SUM(ps.PointsScored) > 0 ORDER BY AssistToPointRatio DESC LIMIT 1;"}]