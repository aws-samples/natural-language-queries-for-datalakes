[
  {"QUESTION_NO": 1,
    "GROUP_NO": 1,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many albums does AC/DC have?",
    "DISAMBIGUATED_QUESTION": "Count the number of albums in the Album table associated with the artist named 'AC/DC' in the Artist table.",
    "ANSWER_SQL": "SELECT COUNT(*) FROM Album WHERE ArtistId = (SELECT ArtistId FROM Artist WHERE Name = 'AC/DC')"}, 
  {"QUESTION_NO": 2,
    "GROUP_NO": 2,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who is the employee with the earliest hire date?",
    "DISAMBIGUATED_QUESTION": "Find the first and last name of the employee with the earliest HireDate in the Employee table.",
    "ANSWER_SQL": "SELECT FirstName, LastName FROM Employee ORDER BY HireDate ASC LIMIT 1"}, 
  {"QUESTION_NO": 3,
    "GROUP_NO": 3,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the total amount of all invoices?",
    "DISAMBIGUATED_QUESTION": "Calculate the sum of the Total column from all rows in the Invoice table.",
    "ANSWER_SQL": "SELECT SUM(Total) FROM Invoice"}, 
  {"QUESTION_NO": 4,
    "GROUP_NO": 4,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many tracks are in the 'Rock' genre?",
    "DISAMBIGUATED_QUESTION": "Count the number of tracks in the Track table that have a GenreId corresponding to 'Rock' in the Genre table.",
    "ANSWER_SQL": "SELECT COUNT(*) FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Rock')"}, 
  {"QUESTION_NO": 5,
    "GROUP_NO": 5,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which customer has spent the most money?",
    "DISAMBIGUATED_QUESTION": "Find the customer who has the highest sum of Total from the Invoice table, joining with the Customer table to get their name.",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, SUM(i.Total) as TotalSpent FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId ORDER BY TotalSpent DESC LIMIT 1"}, 
  {"QUESTION_NO": 6,
    "GROUP_NO": 6,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average length of tracks in milliseconds?",
    "DISAMBIGUATED_QUESTION": "Calculate the average of the Milliseconds column from all rows in the Track table.",
    "ANSWER_SQL": "SELECT AVG(Milliseconds) FROM Track"}, 
  {"QUESTION_NO": 7,
    "GROUP_NO": 7,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many employees report directly to the General Manager?",
    "DISAMBIGUATED_QUESTION": "Count the number of employees in the Employee table whose ReportsTo field matches the EmployeeId of the employee with the title 'General Manager'.",
    "ANSWER_SQL": "SELECT COUNT(*) FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE Title = 'General Manager')"}, 
  {"QUESTION_NO": 8,
    "GROUP_NO": 8,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which playlist has the most tracks?",
    "DISAMBIGUATED_QUESTION": "Find the playlist with the highest count of associated tracks by joining the Playlist and PlaylistTrack tables.",
    "ANSWER_SQL": "SELECT p.Name, COUNT(*) as TrackCount FROM Playlist p JOIN PlaylistTrack pt ON p.PlaylistId = pt.PlaylistId GROUP BY p.PlaylistId ORDER BY TrackCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 9,
    "GROUP_NO": 9,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the total size of all tracks in bytes?",
    "DISAMBIGUATED_QUESTION": "Calculate the sum of the Bytes column from all rows in the Track table.",
    "ANSWER_SQL": "SELECT SUM(Bytes) FROM Track"}, 
  {"QUESTION_NO": 10,
    "GROUP_NO": 10,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many customers are there in each country?",
    "DISAMBIGUATED_QUESTION": "Count the number of customers for each unique Country value in the Customer table, sorted by the count in descending order.",
    "ANSWER_SQL": "SELECT Country, COUNT(*) as CustomerCount FROM Customer GROUP BY Country ORDER BY CustomerCount DESC"}, 
  {"QUESTION_NO": 11,
    "GROUP_NO": 11,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the name of the album with TrackId 5?",
    "DISAMBIGUATED_QUESTION": "Find the Title of the Album associated with the Track that has TrackId 5, joining the Album and Track tables.",
    "ANSWER_SQL": "SELECT a.Title FROM Album a JOIN Track t ON a.AlbumId = t.AlbumId WHERE t.TrackId = 5"}, 
  {"QUESTION_NO": 12,
    "GROUP_NO": 12,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which artist has the most albums?",
    "DISAMBIGUATED_QUESTION": "Find the artist with the highest count of associated albums by joining the Artist and Album tables.",
    "ANSWER_SQL": "SELECT ar.Name, COUNT(*) as AlbumCount FROM Artist ar JOIN Album al ON ar.ArtistId = al.ArtistId GROUP BY ar.ArtistId ORDER BY AlbumCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 13,
    "GROUP_NO": 13,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the total duration of all tracks in hours?",
    "DISAMBIGUATED_QUESTION": "Calculate the sum of the Milliseconds column from all rows in the Track table, convert it to hours, and round to 2 decimal places.",
    "ANSWER_SQL": "SELECT ROUND(SUM(Milliseconds) / 3600000.0, 2) as TotalHours FROM Track"}, 
  {"QUESTION_NO": 14,
    "GROUP_NO": 14,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many invoices were there in 2021?",
    "DISAMBIGUATED_QUESTION": "Count the number of invoices in the Invoice table where the year of the InvoiceDate is 2021.",
    "ANSWER_SQL": "SELECT COUNT(*) FROM Invoice WHERE strftime('%Y', InvoiceDate) = '2021'"}, 
  {"QUESTION_NO": 15,
    "GROUP_NO": 15,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the name of the customer who made the first purchase?",
    "DISAMBIGUATED_QUESTION": "Find the first and last name of the customer associated with the earliest InvoiceDate in the Invoice table.",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId ORDER BY i.InvoiceDate ASC LIMIT 1"}, 
  {"QUESTION_NO": 16,
    "GROUP_NO": 16,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which track appears on the most playlists?",
    "DISAMBIGUATED_QUESTION": "Find the track with the highest count of associated playlists by joining the Track and PlaylistTrack tables.",
    "ANSWER_SQL": "SELECT t.Name, COUNT(*) as PlaylistCount FROM Track t JOIN PlaylistTrack pt ON t.TrackId = pt.TrackId GROUP BY t.TrackId ORDER BY PlaylistCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 17,
    "GROUP_NO": 17,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average number of tracks per album?",
    "DISAMBIGUATED_QUESTION": "Calculate the average number of tracks per album by first counting the tracks for each album, then averaging those counts.",
    "ANSWER_SQL": "SELECT AVG(TrackCount) FROM (SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId)"}, 
  {"QUESTION_NO": 18,
    "GROUP_NO": 18,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many customers does each employee support?",
    "DISAMBIGUATED_QUESTION": "Count the number of customers associated with each employee as their support representative, including employees with no customers.",
    "ANSWER_SQL": "SELECT e.FirstName, e.LastName, COUNT(c.CustomerId) as CustomerCount FROM Employee e LEFT JOIN Customer c ON e.EmployeeId = c.SupportRepId GROUP BY e.EmployeeId"}, 
  {"QUESTION_NO": 19,
    "GROUP_NO": 19,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most expensive track?",
    "DISAMBIGUATED_QUESTION": "Find the track with the highest UnitPrice in the Track table.",
    "ANSWER_SQL": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 1"}, 
  {"QUESTION_NO": 20,
    "GROUP_NO": 20,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many tracks have no genre assigned?",
    "DISAMBIGUATED_QUESTION": "Count the number of tracks in the Track table where the GenreId is null.",
    "ANSWER_SQL": "SELECT COUNT(*) FROM Track WHERE GenreId IS NULL"}, 
  {"QUESTION_NO": 21,
    "GROUP_NO": 21,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the total sales for each year?",
    "DISAMBIGUATED_QUESTION": "Calculate the sum of the Total column from the Invoice table, grouped by the year of the InvoiceDate.",
    "ANSWER_SQL": "SELECT strftime('%Y', InvoiceDate) as Year, SUM(Total) as TotalSales FROM Invoice GROUP BY Year ORDER BY Year"}, 
  {"QUESTION_NO": 22,
    "GROUP_NO": 22,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which customer has purchased the most tracks?",
    "DISAMBIGUATED_QUESTION": "Find the customer who has the highest count of purchased tracks by joining the Customer, Invoice, and InvoiceLine tables.",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, COUNT(*) as TrackCount FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId GROUP BY c.CustomerId ORDER BY TrackCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 23,
    "GROUP_NO": 23,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average price of tracks in each genre?",
    "DISAMBIGUATED_QUESTION": "Calculate the average UnitPrice of tracks for each genre by joining the Genre and Track tables.",
    "ANSWER_SQL": "SELECT g.Name, AVG(t.UnitPrice) as AvgPrice FROM Genre g JOIN Track t ON g.GenreId = t.GenreId GROUP BY g.GenreId"}, 
  {"QUESTION_NO": 24,
    "GROUP_NO": 24,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many albums don't have a track that is longer than 5 minutes?",
    "DISAMBIGUATED_QUESTION": "Count the number of albums that don't have any tracks with a duration longer than 5 minutes (300,000 milliseconds).",
    "ANSWER_SQL": "SELECT COUNT(*) FROM Album WHERE AlbumId NOT IN (SELECT DISTINCT AlbumId FROM Track WHERE Milliseconds > 300000)"}, 
  {"QUESTION_NO": 25,
    "GROUP_NO": 25,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the boss of the boss of Jane Peacock?",
    "DISAMBIGUATED_QUESTION": "Find the name of the employee who is two levels above Jane Peacock in the reporting hierarchy.",
    "ANSWER_SQL": "SELECT e.FirstName, e.LastName FROM Employee e WHERE e.EmployeeId = (SELECT ReportsTo FROM Employee WHERE EmployeeId = (SELECT ReportsTo FROM Employee WHERE FirstName = 'Jane' AND LastName = 'Peacock'))"}, 
  {"QUESTION_NO": 26,
    "GROUP_NO": 26,
    "SUBQUESTION_NO": 0,
    "QUESTION": "How many rock stars we got?",
    "DISAMBIGUATED_QUESTION": "Count the number of unique artists who have at least one track in the 'Rock' genre.",
    "ANSWER_SQL": "SELECT COUNT(DISTINCT ar.ArtistId) FROM Artist ar JOIN Album al ON ar.ArtistId = al.ArtistId JOIN Track t ON al.AlbumId = t.AlbumId JOIN Genre g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock'"}, 
  {"QUESTION_NO": 27,
    "GROUP_NO": 27,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the top dog in sales?",
    "DISAMBIGUATED_QUESTION": "Find the employee who has the highest total sales amount from invoices of customers they support.",
    "ANSWER_SQL": "SELECT e.FirstName, e.LastName, SUM(i.Total) as TotalSales FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY e.EmployeeId ORDER BY TotalSales DESC LIMIT 1"}, 
  {"QUESTION_NO": 28,
    "GROUP_NO": 28,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the hottest track in town?",
    "DISAMBIGUATED_QUESTION": "Find the track that has been purchased the most times based on the InvoiceLine table.",
    "ANSWER_SQL": "SELECT t.Name, COUNT(*) as PurchaseCount FROM Track t JOIN InvoiceLine il ON t.TrackId = il.TrackId GROUP BY t.TrackId ORDER BY PurchaseCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 29,
    "GROUP_NO": 29,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which genre is bringing home the bacon?",
    "DISAMBIGUATED_QUESTION": "Find the genre that has generated the highest total revenue based on invoice line items.",
    "ANSWER_SQL": "SELECT g.Name, SUM(il.UnitPrice * il.Quantity) as TotalRevenue FROM Genre g JOIN Track t ON g.GenreId = t.GenreId JOIN InvoiceLine il ON t.TrackId = il.TrackId GROUP BY g.GenreId ORDER BY TotalRevenue DESC LIMIT 1"}, 
  {"QUESTION_NO": 30,
    "GROUP_NO": 30,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the most loyal customer in the house?",
    "DISAMBIGUATED_QUESTION": "Find the customer who has made the highest number of distinct purchases (invoices).",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, COUNT(DISTINCT i.InvoiceId) as InvoiceCount FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId ORDER BY InvoiceCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 31,
    "GROUP_NO": 31,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the longest jam session we've got?",
    "DISAMBIGUATED_QUESTION": "Find the track with the longest duration in minutes.",
    "ANSWER_SQL": "SELECT Name, Milliseconds / 60000.0 as Minutes FROM Track ORDER BY Milliseconds DESC LIMIT 1"}, 
  {"QUESTION_NO": 32,
    "GROUP_NO": 32,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which artist is the king of bling?",
    "DISAMBIGUATED_QUESTION": "Find the artist who has generated the highest total revenue based on invoice line items.",
    "ANSWER_SQL": "SELECT ar.Name, SUM(il.UnitPrice * il.Quantity) as TotalRevenue FROM Artist ar JOIN Album al ON ar.ArtistId = al.ArtistId JOIN Track t ON al.AlbumId = t.AlbumId JOIN InvoiceLine il ON t.TrackId = il.TrackId GROUP BY ar.ArtistId ORDER BY TotalRevenue DESC LIMIT 1"}, 
  {"QUESTION_NO": 33,
    "GROUP_NO": 33,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average party size for our gigs?",
    "DISAMBIGUATED_QUESTION": "Calculate the average number of tracks per playlist.",
    "ANSWER_SQL": "SELECT AVG(TrackCount) as AvgTracksPerPlaylist FROM (SELECT PlaylistId, COUNT(*) as TrackCount FROM PlaylistTrack GROUP BY PlaylistId)"}, 
  {"QUESTION_NO": 34,
    "GROUP_NO": 34,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the most prolific wordsmith in our lineup?",
    "DISAMBIGUATED_QUESTION": "Find the composer who has written the highest number of tracks.",
    "ANSWER_SQL": "SELECT Composer, COUNT(*) as TrackCount FROM Track WHERE Composer IS NOT NULL GROUP BY Composer ORDER BY TrackCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 35,
    "GROUP_NO": 35,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which country is our biggest cash cow?",
    "DISAMBIGUATED_QUESTION": "Find the country that has generated the highest total revenue based on invoice billing addresses.",
    "ANSWER_SQL": "SELECT BillingCountry, SUM(Total) as TotalRevenue FROM Invoice GROUP BY BillingCountry ORDER BY TotalRevenue DESC LIMIT 1"}, 
  {"QUESTION_NO": 36,
    "GROUP_NO": 36,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most popular music format in our store?",
    "DISAMBIGUATED_QUESTION": "Find the media type that is associated with the highest number of tracks.",
    "ANSWER_SQL": "SELECT mt.Name, COUNT(*) as TrackCount FROM MediaType mt JOIN Track t ON mt.MediaTypeId = t.MediaTypeId GROUP BY mt.MediaTypeId ORDER BY TrackCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 37,
    "GROUP_NO": 37,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the employee with the most experience under their belt?",
    "DISAMBIGUATED_QUESTION": "Find the employee who has been employed for the longest time based on their hire date.",
    "ANSWER_SQL": "SELECT FirstName, LastName, julianday('now') - julianday(HireDate) as DaysEmployed FROM Employee ORDER BY DaysEmployed DESC LIMIT 1"}, 
  {"QUESTION_NO": 38,
    "GROUP_NO": 38,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average ticket price for our shows?",
    "DISAMBIGUATED_QUESTION": "Calculate the average unit price of all tracks.",
    "ANSWER_SQL": "SELECT AVG(UnitPrice) as AvgPrice FROM Track"}, 
  {"QUESTION_NO": 39,
    "GROUP_NO": 39,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which month is our cash register ringing the most?",
    "DISAMBIGUATED_QUESTION": "Find the month that has generated the highest total revenue based on invoice dates.",
    "ANSWER_SQL": "SELECT strftime('%m', InvoiceDate) as Month, SUM(Total) as TotalRevenue FROM Invoice GROUP BY Month ORDER BY TotalRevenue DESC LIMIT 1"}, 
  {"QUESTION_NO": 40,
    "GROUP_NO": 40,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the busiest bee in our support team?",
    "DISAMBIGUATED_QUESTION": "Find the employee who supports the highest number of customers.",
    "ANSWER_SQL": "SELECT e.FirstName, e.LastName, COUNT(*) as CustomerCount FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId GROUP BY e.EmployeeId ORDER BY CustomerCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 41,
    "GROUP_NO": 41,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the golden ratio of our music collection?",
    "DISAMBIGUATED_QUESTION": "Calculate the ratio of unique albums to unique artists in the Album table.",
    "ANSWER_SQL": "SELECT CAST(COUNT(DISTINCT AlbumId) AS FLOAT) / COUNT(DISTINCT ArtistId) as AlbumArtistRatio FROM Album"}, 
  {"QUESTION_NO": 42,
    "GROUP_NO": 42,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the customer with the fattest wallet?",
    "DISAMBIGUATED_QUESTION": "Find the customer who has spent the most money based on the total of their invoices.",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, SUM(i.Total) as TotalSpent FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId ORDER BY TotalSpent DESC LIMIT 1"}, 
  {"QUESTION_NO": 43,
    "GROUP_NO": 43,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the most common gang size in our crew?",
    "DISAMBIGUATED_QUESTION": "Find the most common number of distinct composers associated with a single artist.",
    "ANSWER_SQL": "WITH artist_composer_count AS ( SELECT al.ArtistId, COUNT(DISTINCT tr.Composer) AS Comp_count FROM Track tr JOIN Album Al ON Al.AlbumId = tr.AlbumId WHERE tr.Composer IS NOT NULL GROUP BY al.ArtistId) ,composer_count_distribution AS (select Comp_count, count(*) occurrence FROM artist_composer_count GROUP BY comp_count) SELECT max(occurrence) AS common_composer_count FROM composer_count_distribution"}, 
  {"QUESTION_NO": 44,
    "GROUP_NO": 44,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which track is the biggest bang for the buck?",
    "DISAMBIGUATED_QUESTION": "Find the track that offers the most playtime (in milliseconds) per unit of price.",
    "ANSWER_SQL": "SELECT Name, Milliseconds / UnitPrice as TimePerDollar FROM Track ORDER BY TimePerDollar DESC LIMIT 1"}, 
  {"QUESTION_NO": 45,
    "GROUP_NO": 45,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the employee with the most diverse taste in customers?",
    "DISAMBIGUATED_QUESTION": "Find the employee who supports customers from the highest number of distinct countries.",
    "ANSWER_SQL": "SELECT e.FirstName, e.LastName, COUNT(DISTINCT c.Country) as CountryCount FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId GROUP BY e.EmployeeId ORDER BY CountryCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 46,
    "GROUP_NO": 46,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average size of our musical family?",
    "DISAMBIGUATED_QUESTION": "Calculate the average number of tracks per album.",
    "ANSWER_SQL": "SELECT AVG(TrackCount) as AvgTracksPerAlbum FROM (SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId)"}, 
  {"QUESTION_NO": 47,
    "GROUP_NO": 47,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which genre is the most high-maintenance?",
    "DISAMBIGUATED_QUESTION": "Find the genre with the highest average track duration.",
    "ANSWER_SQL": "SELECT g.Name, AVG(t.Milliseconds) as AvgDuration FROM Genre g JOIN Track t ON g.GenreId = t.GenreId GROUP BY g.GenreId ORDER BY AvgDuration DESC LIMIT 1"}, 
  {"QUESTION_NO": 48,
    "GROUP_NO": 48,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the customer that's been with us through thick and thin?",
    "DISAMBIGUATED_QUESTION": "Find the customer who made the earliest purchase based on invoice dates.",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, MIN(i.InvoiceDate) as FirstPurchase FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId ORDER BY FirstPurchase ASC LIMIT 1"}, 
  {"QUESTION_NO": 49,
    "GROUP_NO": 49,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the magic number for tracks in a hit album?",
    "DISAMBIGUATED_QUESTION": "Find the most common number of tracks per album.",
    "ANSWER_SQL": "SELECT TrackCount, COUNT(*) as AlbumCount FROM (SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId) GROUP BY TrackCount ORDER BY AlbumCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 50,
    "GROUP_NO": 50,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which artist is the master of short and sweet?",
    "DISAMBIGUATED_QUESTION": "Find the artist with the lowest average track duration.",
    "ANSWER_SQL": "SELECT ar.Name, AVG(t.Milliseconds) as AvgDuration FROM Artist ar JOIN Album al ON ar.ArtistId = al.ArtistId JOIN Track t ON al.AlbumId = t.AlbumId GROUP BY ar.ArtistId ORDER BY AvgDuration ASC LIMIT 1"}, 
  {"QUESTION_NO": 51,
    "GROUP_NO": 51,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the golden hour for our cash register?",
    "DISAMBIGUATED_QUESTION": "Find the hour of the day that has generated the highest total revenue based on invoice dates.",
    "ANSWER_SQL": "SELECT strftime('%H', InvoiceDate) as Hour, SUM(Total) as TotalRevenue FROM Invoice GROUP BY Hour ORDER BY TotalRevenue DESC LIMIT 1"}, 
  {"QUESTION_NO": 52,
    "GROUP_NO": 52,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the customer with the most eclectic taste?",
    "DISAMBIGUATED_QUESTION": "Find the customer who has purchased tracks from the highest number of distinct genres.",
    "ANSWER_SQL": "SELECT c.FirstName, c.LastName, COUNT(DISTINCT g.GenreId) as GenreCount FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Genre g ON t.GenreId = g.GenreId GROUP BY c.CustomerId ORDER BY GenreCount DESC LIMIT 1"}, 
  {"QUESTION_NO": 53,
    "GROUP_NO": 53,
    "SUBQUESTION_NO": 0,
    "QUESTION": "What's the average lifespan of our musical careers?",
    "DISAMBIGUATED_QUESTION": "Calculate the average number of days between a customer's first and last purchase.",
    "ANSWER_SQL": "SELECT CAST(AVG(days) AS INTEGER) AS average_days FROM (SELECT customerID, JULIANDAY(MAX(InvoiceDate))- JULIANDAY(MIN(InvoiceDate)) AS days FROM Invoice i GROUP BY customerID)"}, 
  {"QUESTION_NO": 54,
    "GROUP_NO": 54,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Which playlist is the best bang for your buck?",
    "DISAMBIGUATED_QUESTION": "Find the playlist that offers the most playtime (in milliseconds) per unit of total price.",
    "ANSWER_SQL": "SELECT p.Name, SUM(t.Milliseconds) / SUM(t.UnitPrice) as TimePerDollar FROM Playlist p JOIN PlaylistTrack pt ON p.PlaylistId = pt.PlaylistId JOIN Track t ON pt.TrackId = t.TrackId GROUP BY p.PlaylistId ORDER BY TimePerDollar DESC LIMIT 1"}, 
  {"QUESTION_NO": 55,
    "GROUP_NO": 55,
    "SUBQUESTION_NO": 0,
    "QUESTION": "Who's the employee with the Midas touch?",
    "DISAMBIGUATED_QUESTION": "Find the employee whose supported customers have the highest average invoice total.",
    "ANSWER_SQL": "SELECT e.FirstName, e.LastName, AVG(i.Total) as AvgInvoiceTotal FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY e.EmployeeId ORDER BY AvgInvoiceTotal DESC LIMIT 1"}]